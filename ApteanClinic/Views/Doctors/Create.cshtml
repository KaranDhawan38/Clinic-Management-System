@model ApteanClinic.Models.DoctorDetailsViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm(FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Add Doctor</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.DoctorUser.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Doctor.DoctorUser.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.DoctorUser.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.DoctorUser.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Doctor.DoctorUser.Gender, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Doctor.DoctorUser.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.DoctorUser.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Doctor.DoctorUser.BloodGroup, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Doctor.DoctorUser.BloodGroup, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.DoctorUser.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Doctor.DoctorUser.Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.DoctorUser.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.DoctorUser.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Doctor.DoctorUser.Email, new { htmlAttributes = new { @class = "form-control", key = "Email" } })
                @Html.ValidationMessageFor(model => model.Doctor.DoctorUser.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.DoctorUser.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Doctor.DoctorUser.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.DoctorUser.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.DoctorUser.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Doctor.DoctorUser.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.DoctorUser.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.Speciality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Doctor.Speciality, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Doctor.Speciality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor.Fees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Doctor.Fees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor.Fees, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ">
            @Html.LabelFor(model => model.Timings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <table class="table table-hover col-md-12">
                    @for (int i = 0; i < Model.Timings.Count(); i++)
                    {
                        <tr>
                            <td>
                                @Html.CheckBoxFor(m => m.Timings[i].Selected)
                            </td>
                            <td>
                                @Html.DisplayFor(m => m.Timings[i].Text)
                                @Html.HiddenFor(m => m.Timings[i].Value)
                                @Html.HiddenFor(m => m.Timings[i].Text)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>

        <div class="form-group text-center">
            <input type="submit" value="Add Doctor" class="btn btn-success" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
