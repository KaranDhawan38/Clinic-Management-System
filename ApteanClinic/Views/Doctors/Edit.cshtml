@model ApteanClinic.Models.Doctor

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Doctor Details</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.DoctorUser.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.DoctorUser.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.DoctorUser.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DoctorUser.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.HiddenFor(model => model.DoctorUser.Email)
    @Html.HiddenFor(model => model.DoctorUser.Role)

    <div class="form-group">
        @Html.LabelFor(model => model.Fees, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Fees, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fees, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DoctorUser.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EnumDropDownListFor(model => model.DoctorUser.Gender, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DoctorUser.Gender, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DoctorUser.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.DoctorUser.Contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DoctorUser.Contact, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DoctorUser.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EnumDropDownListFor(model => model.DoctorUser.BloodGroup, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DoctorUser.BloodGroup, "", new { @class = "text-danger" })
        </div>
    </div>
    <div hidden>
        @Html.EditorFor(model => model.ShiftTime)
    </div>

    @Html.HiddenFor(model => model.DoctorUser.Password)
    @Html.HiddenFor(model => model.DoctorUser.ConfirmPassword)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
            @if (Session["Role"].ToString() == "Doctor")
            {
                <button class="btn btn-default" type="button" onclick="location.href='/ResetPassword/Index'"><i style="padding:5px" class="fa fa-lock"></i> Reset Password </button>
            }
        </div>
    </div>
</div>
}

@if (Session["Role"].ToString() != "Doctor")
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
